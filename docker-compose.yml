version: '3'

services:

#  web:
#    image: dck.zhuge.test/zgo_start
#    build:
#      context: .
#      dockerfile: Dockerfile
#    volumes:
#    environment:
#      REDIS_HOST: redis
#      MYSQL_HOST: mysql
#      MONGO_HOST: mongo
#    depends_on:
#      - redis
#      - mongo
#      - mysql
#  networks:
#        - link-network

  redis:
    image: redis
    ports:
      - 6379:6379
    #    volumes:
    #      - /opt/dbs/redisdb:/data
    networks:
      - link-network

  mongo:
    image: mongo
    ports:
      - 27017:27017
    #    volumes:
    #      - /opt/dbs/mongodb/configdb:/data/configdb
    #      - /opt/dbs/mongodb/db:/data/db
    networks:
      - link-network

  mysql:
    image: mysql
    ports:
      - 3306:3306
    #    volumes:
    #      - /opt/dbs/redisdb:/data
    networks:
      - link-network

  nsqlookupd:
    image: nsqio/nsq
    networks:
      - link-network
    hostname: nsqlookupd
    ports:
      - "4161:4161"
      - "4160:4160"
    command: /nsqlookupd

  nsqd:
    image: nsqio/nsq
    depends_on:
      - nsqlookupd
    hostname: nsqd
    #    volumes:
    #      - /opt/dbs/nsq:/data
    networks:
      - link-network
    ports:
      - "4151:4151"
      - "4150:4150"
    #    command: /nsqd --broadcast-address=nsqd --lookupd-tcp-address=nsqlookupd:4160 --data-path=/data
    command: /nsqd --broadcast-address=nsqd --lookupd-tcp-address=nsqlookupd:4160

  nsqadmin:
    image: nsqio/nsq
    depends_on:
      - nsqlookupd
    hostname: nsqadmin
    ports:
      - "4171:4171"
    networks:
      - link-network
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161

#  zookeeper:
#    image: wurstmeister/zookeeper
#    restart: unless-stopped
#    hostname: zookeeper
#    ports:
#      - "2181:2181"
#    container_name: zookeeper
#    networks:
#      - link-network
#
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: localhost
#      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#      KAFKA_BROKER_ID: 1
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_CREATE_TOPICS: "stream-in:1:1,stream-out:1:1"
#    depends_on:
#      - zookeeper
#    container_name: kafka
#    networks:
#      - link-network

networks:
  link-network:
    driver: bridge